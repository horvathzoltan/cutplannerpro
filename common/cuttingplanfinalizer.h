#pragma once  // ğŸ‘‘ Modern include guard â€” helyettesÃ­ti a klasszikus #ifndef/#define-et

#include <QVector> // Qt-tÃ­pus a vÃ¡gÃ¡si tervek Ã©s hulladÃ©klista kezelÃ©sÃ©re

// ğŸ”½ Model osztÃ¡lyok, amikkel dolgozunk
#include "../model/cutresult.h"              // VÃ¡gÃ¡s eredmÃ©nye â€” tartalmaz hulladÃ©k adatokat
#include "../model/cutplan.h"                // Egyedi vÃ¡gÃ¡si terv â€” anyag, hossz, reusable info

// ğŸ”½ KÃ©szletregiszterek â€” stock Ã©s reusable kezelÃ©se
#include "../model/registries/stockregistry.h"
#include "../model/registries/reusablestockregistry.h"

// ğŸ”½ HulladÃ©k reprezentÃ¡ciÃ³
#include "../model/reusablestockentry.h"

// ğŸ”½ KonverziÃ³s logika: CutResult â†’ ReusableStockEntry
#include "../common/cutresultutils.h"

/**
 * @brief Statikus finalizer osztÃ¡ly, ami lezÃ¡rja a vÃ¡gÃ¡si tervet.
 * Feladatai:
 *  - LevonÃ¡s a felhasznÃ¡lt kÃ©szletekbÅ‘l
 *  - Ãšj hulladÃ©kdarabok regisztrÃ¡lÃ¡sa
 *  - Tervek stÃ¡tuszÃ¡nak lezÃ¡rÃ¡sa (logikailag a Presenter vÃ©gzi)
 */
class CuttingPlanFinalizer
{
public:
    /**
     * @brief FinalizÃ¡lja a megadott vÃ¡gÃ¡si terveket Ã©s hulladÃ©kokat.
     *
     * @param plans A vÃ¡gÃ¡si tervek listÃ¡ja
     * @param leftovers A vÃ¡gÃ¡sok sorÃ¡n keletkezett hulladÃ©kdarabok
     */
    static void finalize(QVector<CutPlan>& plans,
                         const QVector<CutResult>& leftovers);
};

