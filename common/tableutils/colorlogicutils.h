#pragma once
#include "common/tableutils/colorconstants.h"
#include <QColor>
#include <QWidget>

namespace ColorLogicUtils {

// üîµ Hossz alapj√°n h√°tt√©rsz√≠n
inline QColor colorForLength(int length_mm) {
    if (length_mm < 6000)
        return ColorConstants::ColorYellow; // s√°rg√°s
    else if (length_mm == 6000)
        return ColorConstants::ColorGreenStandard; // z√∂ld
    else
        return ColorConstants::ColorGreenSuper; // szuperz√∂ld
}

// üî¥ Mennyis√©g alapj√°n h√°tt√©rsz√≠n
inline QColor colorForQuantity(int quantity) {
    if (quantity == 0)
        return ColorConstants::ColorRed; // piros
    else if (quantity <= 5)
        return ColorConstants::ColorOrange; // narancss√°rga
    else
        return ColorConstants::ColorGreenStandard; // z√∂ld
}

inline void applyBadgeBackground(QWidget* widget, const QColor& base) {
    widget->setAutoFillBackground(true);
    widget->setStyleSheet(QString(
                              "background-color: %1;"
                              "padding-top: 6px; padding-bottom: 6px;"
                              ).arg(base.name()));
}

} // endof namespace ColorLogicUtils
