#pragma once

#include <QString>
#include <QUuid>
//#include <optional>

// V√°g√°si utas√≠t√°s st√°tusz
enum class CutStatus {
    Pending,   ///< M√©g nem hajtott√°k v√©gre
    InProgress,///< Folyamatban (opcion√°lis)
    Done,      ///< V√©grehajtva
    Error      ///< Hiba t√∂rt√©nt
};

// Egyetlen v√°g√°i m≈±velet v√©grehajt√°s√°nak adatai
struct CutInstruction {
    QUuid rowId;                   // üîπ UI-szint≈± azonos√≠t√≥ (sorhoz k√∂tve)

    int stepId = 0;                 // Folyamatos sorsz√°m
    QString rodLabel;               // R√∫d azonos√≠t√≥ (A, B, C‚Ä¶)
    QUuid materialId;            // Anyag UUID

    QString barcode;                  // Konkr√©t r√∫d azonos√≠t√≥ja
    double cutSize_mm = 0.0;        // V√°gand√≥ hossz
    double kerf_mm = 0.0;           // V√°g√°svesztes√©g
    double remainingBefore_mm = 0.0;// V√°g√°s el≈ëtti hossz
    double remainingAfter_mm = 0.0; // V√°g√°s ut√°ni hossz

    QUuid machineId;        // G√©p UUID
    QString machineName;     // G√©p neve (UI-hoz, redund√°ns viewmodel mez≈ë)
    CutStatus status = CutStatus::Pending;

    // Seg√©df√ºggv√©ny a sz√°m√≠t√°shoz
    void computeRemaining() {
        remainingAfter_mm = remainingBefore_mm - cutSize_mm - kerf_mm;
    }

    CutInstruction() : rowId(QUuid::createUuid()) {}
};
