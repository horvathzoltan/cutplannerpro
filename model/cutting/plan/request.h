#pragma once

#include <QUuid>
#include <QString>


/**
 * @brief Egy v√°g√°si ig√©nyt reprezent√°l√≥ adatstrukt√∫ra.
 *
 * Tartalmazza az anyag azonos√≠t√≥j√°t, a k√≠v√°nt hossz√∫s√°got, darabsz√°mot,
 * valamint opcion√°lisan a megrendel≈ë nev√©t √©s a k√ºls≈ë hivatkoz√°si azonos√≠t√≥t.
 */

namespace Cutting {
namespace Plan {


struct Request {
    QUuid requestId = QUuid::createUuid(); // üí° Automatikus egyedi azonos√≠t√≥
    QUuid materialId;           ///< üîó Az anyag egyedi t√∂rzsbeli azonos√≠t√≥ja
    int requiredLength;         ///< üìè V√°g√°s hossza (millim√©terben)
    int quantity;               ///< üî¢ Sz√ºks√©ges darabsz√°m

    QString ownerName;          ///< üë§ Megrendel≈ë neve (opcion√°lis inform√°ci√≥)
    QString externalReference;  ///< üßæ K√ºls≈ë hivatkoz√°s / t√©telsz√°m (opcion√°lis inform√°ci√≥)

    /**
     * @brief Ellen≈ërzi, hogy az ig√©ny √©rv√©nyes-e.
     *
     * @return true ha minden k√∂telez≈ë mez≈ë √©rtelmes adatot tartalmaz.
     */
    bool isValid() const;

    /**
     * @brief Visszaadja az √©rv√©nytelens√©g ok√°t sz√∂veges form√°ban.
     *
     * @return QString Magyar√°zat az invalid √°llapotra.
     */
    QStringList invalidReasons() const;


    QString toString() const;
};
} //endof namespace Plan
} //endof namespace Cutting
