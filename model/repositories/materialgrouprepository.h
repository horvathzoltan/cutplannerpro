#pragma once

#include <QString>
#include "../registries/materialgroupregistry.h"

/*
üì¶ Three Phase Import
Three Phase Import egy struktur√°lt CSV-adatfeldolgoz√°si minta, amely
h√°rom j√≥l elk√ºl√∂n√≠tett l√©p√©sben alak√≠tja √°t a nyers sorokat domain objektumokk√°:

üîÅ F√°zisok
Convert Phase A nyers CSV sorokat t√≠pusos Row strukt√∫r√°kk√° alak√≠tjuk.
P√©lda: MaterialGroupRow, MaterialGroupMemberRow

Build Phase A Row strukt√∫r√°kb√≥l domain objektumokat √©p√≠t√ºnk.
P√©lda: MaterialGroup, QUuid (anyag ID)

Assemble Phase Az objektumokat √∂sszef√©s√ºlj√ºk, regisztr√°ljuk, vagy m√°s strukt√∫r√°ba illesztj√ºk.
P√©lda: MaterialGroupRegistry::registerGroup

üéØ El≈ëny√∂k
Modularit√°s: minden f√°zis k√ºl√∂n tesztelhet≈ë

Hibat≈±r√©s: soronk√©nti valid√°ci√≥ √©s logol√°s

Olvashat√≥s√°g: vil√°gos adat√°talak√≠t√°si l√©p√©sek

Sk√°l√°zhat√≥s√°g: k√∂nnyen alkalmazhat√≥ m√°s CSV strukt√∫r√°kra
*/

class MaterialGroupRepository {
public:
        /// F≈ë bel√©p√©si pont: bet√∂lti a csoportokat √©s tagokat CSV-b≈ël
    static bool loadFromCsv(MaterialGroupRegistry& registry);
private:
    /// Csoport defin√≠ci√≥k egy sora
    struct MaterialGroupRow {
        QString groupKey;
        QString groupName;
        QString colorHex;
    };

    /// Csoport tags√°g egy sora
    struct MaterialGroupMemberRow {
        QString groupKey;
        QString materialBarCode;
    };


    // --- Stage 1: Convert ---
    static std::optional<MaterialGroupRow> convertRowToMaterialGroupRow(const QVector<QString>& parts, int lineIndex);
    static std::optional<MaterialGroupMemberRow> convertRowToMaterialGroupMemberRow(const QVector<QString>& parts, int lineIndex);

    // --- Stage 2: Build ---
    static std::optional<MaterialGroup> buildMaterialGroupFromRow(const MaterialGroupRow& row, int lineIndex);
    static std::optional<QUuid> buildMaterialIdFromMemberRow(const MaterialGroupMemberRow& row, int lineIndex);

    // --- Stage 3: Load & Assemble ---
    static QVector<MaterialGroupRow> loadGroupRows(const QString& filepath);
    static QVector<MaterialGroupMemberRow> loadMemberRows(const QString& filepath);
    static void addMaterialToGroup(MaterialGroup* group, const QUuid& materialId);
};

