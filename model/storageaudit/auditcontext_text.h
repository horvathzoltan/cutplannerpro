#pragma once
#include "auditcontext.h"
#include "model/material/materialmaster.h"
#include "model/storageaudit/storageauditrow.h"
#include <QString>

namespace StorageAudit {
namespace Context {

/**
 * @brief Egyszer≈± tooltip: csak √∂sszes√≠tett √©rt√©kek a contextb≈ël.
 *        Hasznos aggreg√°lt audit n√©zetekhez.
 */
inline QString toTooltip(const AuditContext* ctx) {
    if (!ctx) return {};
    return QString("Elv√°rt √∂sszesen (anyagcsoport): %1\nJelen √∂sszesen: %2")
        .arg(ctx->group.totalExpected)
        .arg(ctx->group.totalActual);
}

/**
 * @brief B≈ëv√≠tett tooltip: anyag, t√°rol√≥, sor √©s csoport szint≈± adatok.
 *        Hasznos cellaszint≈± UI‚Äëhoz, ahol a sor √©s a csoport is l√°tszik.
 */
inline QString toTooltip(const AuditContext* ctx,
                         const MaterialMaster* mat,
                         const StorageAuditRow* row) {
    if (!ctx) return {};

    QStringList parts;

    // üß© Anyag adatok
    if (mat) {
        parts << QString("Anyag: %1").arg(mat->name);
        if (!mat->barcode.isEmpty())
            parts << QString("Vonalk√≥d: %1").arg(mat->barcode);
    }

    // üì¶ Sor adatok
    if (row) {
        if (!row->storageName.isEmpty())
            parts << QString("T√°rol√≥: %1").arg(row->storageName);
        parts << QString("Sor t√©nyleges: %1").arg(row->actualQuantity);
        if (row->isInOptimization)
            parts << "R√©sze az optimaliz√°ci√≥nak";
    }

    // üìä Csoportos√≠tott √©rt√©kek (anyag + rootStorage szinten)
    parts << QString("Elv√°rt √∂sszesen (anyagcsoport): %1").arg(ctx->group.totalExpected);
    parts << QString("Jelen √∂sszesen: %1").arg(ctx->group.totalActual);
    parts << QString("Hi√°nyz√≥ √∂sszesen: %1")
                 .arg(std::max(0, ctx->group.totalExpected - ctx->group.totalActual));

    return parts.join("\n");
}

} // namespace Context
} // namespace StorageAudit
