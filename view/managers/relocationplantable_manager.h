#pragma once

#include <QObject>
#include <QTableWidget>
#include <QMap>
#include <QUuid>
#include "model/relocation/relocationinstruction.h"
#include "presenter/CuttingPresenter.h"

class RelocationPlanTableManager : public QObject {
    Q_OBJECT

private:
    QTableWidget* _table;   // ğŸ‘‰ the actual QTableWidget instance
    QWidget* _parent;       // ğŸ‘‰ parent widget, ha kell ownership chain

    // ğŸ‘‰ belsÅ‘ storage: rowId â†’ RelocationInstruction
    QMap<QUuid, RelocationInstruction> _planRowMap;
    // ğŸ‘‰ gyors lookup: rowId â†’ rowIndex (Ã­gy nem kell vÃ©gigiterÃ¡lni a tÃ¡blÃ¡t update-nÃ©l)
    QMap<QUuid, int> _rowIndexMap;
    CuttingPresenter* _presenter = nullptr;   // ğŸ”¹ Ãºj mezÅ‘

    static bool _isVerbose; // ğŸ‘‰ debug logging flag

    void overwriteRow(const QUuid &rowId, const RelocationInstruction &instr);
public:
    explicit RelocationPlanTableManager(QTableWidget* table,
                                        CuttingPresenter* presenter,
                                        QWidget* parent);

    // ğŸ‘‰ Ãºj sor beszÃºrÃ¡sa
    void addRow(const RelocationInstruction& instr);
    // ğŸ‘‰ meglÃ©vÅ‘ sor frissÃ­tÃ©se rowId alapjÃ¡n
    void updateRow(const QUuid& rowId, const RelocationInstruction& instr);
    // ğŸ‘‰ teljes tÃ¡bla tÃ¶rlÃ©se
    void clearTable();

public slots:
    void editRow(const QUuid& rowId, const QString& mode);
    void finalizeRow(const QUuid &rowId);

// signals:
//     // ğŸ‘‰ ha interaktÃ­vvÃ¡ tesszÃ¼k (pl. checkbox a teljesÃ­tÃ©shez), ezen jelezhetÃ¼nk vissza
//     void relocationRowChecked(const QUuid& rowId, bool done);

public:
    static constexpr auto RowId_Key = "relocationId"; // ğŸ‘‰ UserRole kulcs a cellÃ¡kban
    void updateSummaryRow(const RelocationInstruction &summaryInstr);
    QVector<QUuid> allRowIds() const {
        return _planRowMap.keys();
    }

    const RelocationInstruction& getInstruction(const QUuid& rowId) const;
    RelocationInstruction& getInstruction(const QUuid& rowId);

}; // end of class RelocationPlanTableManager

